name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    outputs:
      APP_VERSION: ${{ steps.generate_version.outputs.OUT_APP_VERSION }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml


    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    #delete below steps as not requird as of now
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: piseganesh123/spring-demo

    - name: Generate appVersion
      id: generate_version
      run: |
        echo "OUT_APP_VERSION=$(date +'%Y.%-m.%-d-%-H%-M%-S')" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: .
        file: ./Dockerfile
        push: true
        #tags: ${{ steps.meta.outputs.tags }}
        tags: piseganesh123/spring-demo:${{ steps.generate_version.outputs.OUT_APP_VERSION }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Configure AWS ECR credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
        aws-region: 'ap-south-1'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install Helm
      id: install-helm
      uses: azure/setup-helm@v1
      with:
        version: v3.14.2

    - name: helm package
      id: package-chart
      run: |
        helm package charts/spring-demo-app --app-version=${{ steps.generate_version.outputs.OUT_APP_VERSION }} --version=${{ steps.generate_version.outputs.OUT_APP_VERSION }}

    - name: helm Push
      id: push-chart    
      run: |
        ls && helm push spring-demo-app-${{ steps.generate_version.outputs.OUT_APP_VERSION }}.tgz oci://053243953253.dkr.ecr.ap-south-1.amazonaws.com

  release-on-SIT:
    runs-on: self-hosted-runner
    needs: build

    steps:
    - name: Install Helm
      id: install-helm
      uses: azure/setup-helm@v1
      with:
        version: v3.14.2

    - name: Configure AWS ECR Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_EKS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_EKS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: configure helm registry login
      id: helm-login-registry
      run: aws ecr get-login-password --region ap-south-1 | helm registry login --username AWS --password-stdin 053243953253.dkr.ecr.ap-south-1.amazonaws.com/spring-demo-app

    - name: deploy on local kubernetes cluster
      id: deploy-helm-chart-on-EKS
      run: |
        helm upgrade --install spring-demo-chart oci://053243953253.dkr.ecr.ap-south-1.amazonaws.com/spring-demo-app --version=${{ needs.build-package.outputs.APP_VERSION }}
